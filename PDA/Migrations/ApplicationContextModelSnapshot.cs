// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PDA;

#nullable disable

namespace PDA.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PDA.Models.ContainerInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actions")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContainerImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CycleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MadeOf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RotationNumber")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VesselVoyageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VesselVoyageId");

                    b.ToTable("ContainerInformations");
                });

            modelBuilder.Entity("PDA.Models.Damage", b =>
                {
                    b.Property<int>("DamageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DamageId"), 1L, 1);

                    b.Property<string>("Actions")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DamageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("DamageId");

                    b.ToTable("Damages");
                });

            modelBuilder.Entity("PDA.Models.DamageContainer", b =>
                {
                    b.Property<int>("ContainerId")
                        .HasColumnType("int");

                    b.Property<int>("DamageId")
                        .HasColumnType("int");

                    b.Property<string>("Actions")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContainerInformationId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("ContainerId", "DamageId");

                    b.HasIndex("ContainerInformationId");

                    b.HasIndex("DamageId");

                    b.ToTable("DamagedContainers");
                });

            modelBuilder.Entity("PDA.Models.VesselLashing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actions")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChiefOfficerSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LashingCertifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LashingCompletionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LashingVerifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastContainerTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SupervisorSignature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VesselVoyageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VesselVoyageId");

                    b.ToTable("VesselLashings");
                });

            modelBuilder.Entity("PDA.Models.VesselVoyage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Actions")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChiefOfficerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("RotationNumber")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VesselCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VesselName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VesselVoyages");
                });

            modelBuilder.Entity("PDA.Models.ContainerInformation", b =>
                {
                    b.HasOne("PDA.Models.VesselVoyage", "VesselVoyage")
                        .WithMany("ContainerInformations")
                        .HasForeignKey("VesselVoyageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VesselVoyage");
                });

            modelBuilder.Entity("PDA.Models.DamageContainer", b =>
                {
                    b.HasOne("PDA.Models.ContainerInformation", "ContainerInformation")
                        .WithMany("DamagedContainers")
                        .HasForeignKey("ContainerInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PDA.Models.Damage", "Damage")
                        .WithMany("DamagedContainers")
                        .HasForeignKey("DamageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContainerInformation");

                    b.Navigation("Damage");
                });

            modelBuilder.Entity("PDA.Models.VesselLashing", b =>
                {
                    b.HasOne("PDA.Models.VesselVoyage", "VesselVoyage")
                        .WithMany("VesselLashings")
                        .HasForeignKey("VesselVoyageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VesselVoyage");
                });

            modelBuilder.Entity("PDA.Models.ContainerInformation", b =>
                {
                    b.Navigation("DamagedContainers");
                });

            modelBuilder.Entity("PDA.Models.Damage", b =>
                {
                    b.Navigation("DamagedContainers");
                });

            modelBuilder.Entity("PDA.Models.VesselVoyage", b =>
                {
                    b.Navigation("ContainerInformations");

                    b.Navigation("VesselLashings");
                });
#pragma warning restore 612, 618
        }
    }
}
